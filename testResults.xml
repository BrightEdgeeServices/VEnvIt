<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="27" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2024-10-22" time="13:57:42">
  <environment clr-version="4.0.30319.42000" user-domain="EDDIE" cwd="D:\Dropbox\Projects\BEE\venvit" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk2\Partition3" machine-name="EDDIE" nunit-version="2.5.8.0" os-version="10.0.19045" user="hendr" />
  <culture-info current-culture="en-ZA" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="158.6219" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="D:\Dropbox\Projects\BEE\venvit\tests\Conclude-UpgradePrep.Tests.ps1" executed="True" result="Success" success="True" time="17.0336" asserts="0" description="D:\Dropbox\Projects\BEE\venvit\tests\Conclude-UpgradePrep.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Function testing" executed="True" result="Success" success="True" time="16.9426" asserts="0" description="Function testing">
            <results>
              <test-suite type="TestFixture" name="Function testing.Get-Version" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Function testing.Get-Version">
                <results>
                  <test-case description="Should get 0.0.0" name="Function testing.Get-Version.Should get 0.0.0" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should get 6.0.0" name="Function testing.Get-Version.Should get 6.0.0" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function testing.Invoke-PrepForUpgrade_6_0_0" executed="True" result="Success" success="True" time="16.8555" asserts="0" description="Function testing.Invoke-PrepForUpgrade_6_0_0">
                <results>
                  <test-case description="Should prepare for 6.0.0" name="Function testing.Invoke-PrepForUpgrade_6_0_0.Should prepare for 6.0.0" time="8.2608" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function testing.Update-PackagePrep" executed="True" result="Success" success="True" time="16.9226" asserts="0" description="Function testing.Update-PackagePrep">
                <results>
                  <test-case description="Should apply 6.0.0 and 7.0.0" name="Function testing.Update-PackagePrep.Should apply 6.0.0 and 7.0.0" time="0.0549" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\Dropbox\Projects\BEE\venvit\tests\Install-Conclude.Tests.ps1" executed="True" result="Success" success="True" time="140.9999" asserts="0" description="D:\Dropbox\Projects\BEE\venvit\tests\Install-Conclude.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Function testing" executed="True" result="Success" success="True" time="140.911" asserts="0" description="Function testing">
            <results>
              <test-suite type="TestFixture" name="Function testing.New-Directories" executed="True" result="Success" success="True" time="51.1339" asserts="0" description="Function testing.New-Directories">
                <results>
                  <test-case description="Should create all the directories" name="Function testing.New-Directories.Should create all the directories" time="51.1239" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function testing.Publish-LatestVersion" executed="True" result="Success" success="True" time="51.5271" asserts="0" description="Function testing.Publish-LatestVersion">
                <results>
                  <test-case description="Should copy all installation files" name="Function testing.Publish-LatestVersion.Should copy all installation files" time="0.3886" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function testing.Publish-Secrets" executed="True" result="Success" success="True" time="51.5683" asserts="0" description="Function testing.Publish-Secrets">
                <results>
                  <test-case description="Should copy all secrets files" name="Function testing.Publish-Secrets.Should copy all secrets files" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function testing.Set-EnvironmentVariables tests" executed="True" result="Success" success="True" time="101.9495" asserts="0" description="Function testing.Set-EnvironmentVariables tests">
                <results>
                  <test-case description="All environment variables have values" name="Function testing.Set-EnvironmentVariables tests.All environment variables have values" time="50.3764" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function testing.Set-Path" executed="True" result="Success" success="True" time="115.969" asserts="0" description="Function testing.Set-Path">
                <results>
                  <test-case description="VenvIt not in path" name="Function testing.Set-Path.VenvIt not in path" time="8.3146" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="VenvIt already in path" name="Function testing.Set-Path.VenvIt already in path" time="5.6982" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function testing.Test-Admin Function" executed="True" result="Success" success="True" time="116.0203" asserts="0" description="Function testing.Test-Admin Function">
                <results>
                  <test-case description="Returns true if an administrator" name="Function testing.Test-Admin Function.Returns true if an administrator" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns false if not an administrator" name="Function testing.Test-Admin Function.Returns false if not an administrator" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\Dropbox\Projects\BEE\venvit\tests\Install.Tests.ps1" executed="True" result="Success" success="True" time="0.1609" asserts="0" description="D:\Dropbox\Projects\BEE\venvit\tests\Install.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Function testing" executed="True" result="Success" success="True" time="0.1035" asserts="0" description="Function testing">
            <results>
              <test-suite type="TestFixture" name="Function testing.Invoke-Install Function Tests" executed="True" result="Success" success="True" time="0.0992" asserts="0" description="Function testing.Invoke-Install Function Tests">
                <results>
                  <test-case description="Should Invoke-ConcludeInstall" name="Function testing.Invoke-Install Function Tests.Should Invoke-ConcludeInstall" time="0.0816" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\Dropbox\Projects\BEE\venvit\tests\Update-Manifest.Tests.ps1" executed="True" result="Success" success="True" time="0.1171" asserts="0" description="D:\Dropbox\Projects\BEE\venvit\tests\Update-Manifest.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Function Tests" executed="True" result="Success" success="True" time="0.0668" asserts="0" description="Function Tests">
            <results>
              <test-suite type="TestFixture" name="Function Tests.Convert-PyprojectToml function" executed="True" result="Success" success="True" time="0.02" asserts="0" description="Function Tests.Convert-PyprojectToml function">
                <results>
                  <test-case description="Should parse pyproject.toml and extract version, authors, and description" name="Function Tests.Convert-PyprojectToml function.Should parse pyproject.toml and extract version, authors, and description" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Tests.Invoke-UpdateManifest function" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Function Tests.Invoke-UpdateManifest function">
                <results>
                  <test-case description="Should create manifest.psd1 if pyproject.toml exists and is valid" name="Function Tests.Invoke-UpdateManifest function.Should create manifest.psd1 if pyproject.toml exists and is valid" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Tests.New-ManifestPsd1 function" executed="True" result="Success" success="True" time="0.0583" asserts="0" description="Function Tests.New-ManifestPsd1 function">
                <results>
                  <test-case description="Should create manifest.psd1 with correct data" name="Function Tests.New-ManifestPsd1 function.Should create manifest.psd1 with correct data" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\Dropbox\Projects\BEE\venvit\tests\Utils.Tests.ps1" executed="True" result="Success" success="True" time="0.0654" asserts="0" description="D:\Dropbox\Projects\BEE\venvit\tests\Utils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Function Tests" executed="True" result="Success" success="True" time="0.0186" asserts="0" description="Function Tests">
            <results>
              <test-suite type="TestFixture" name="Function Tests.New-CustomTempDir Test" executed="True" result="Success" success="True" time="0.0139" asserts="0" description="Function Tests.New-CustomTempDir Test">
                <results>
                  <test-case description="Temporary dir with prefix" name="Function Tests.New-CustomTempDir Test.Temporary dir with prefix" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\Dropbox\Projects\BEE\venvit\tests\vn.Tests.ps1" executed="True" result="Success" success="True" time="0.245" asserts="0" description="D:\Dropbox\Projects\BEE\venvit\tests\vn.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Top level script execution" executed="True" result="Success" success="True" time="0.11" asserts="0" description="Top level script execution">
            <results>
              <test-suite type="TestFixture" name="Top level script execution.When Help parameter is passed" executed="True" result="Success" success="True" time="0.028" asserts="0" description="Top level script execution.When Help parameter is passed">
                <results>
                  <test-case description="Should call Show-Help function" name="Top level script execution.When Help parameter is passed.Should call Show-Help function" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Top level script execution.When ProjectName is passed and Help is not passed" executed="True" result="Success" success="True" time="0.0551" asserts="0" description="Top level script execution.When ProjectName is passed and Help is not passed">
                <results>
                  <test-case description="Should call Invoke-Vn function with ProjectName" name="Top level script execution.When ProjectName is passed and Help is not passed.Should call Invoke-Vn function with ProjectName" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Top level script execution.When Var01 is an empty string and Help is not passed" executed="True" result="Success" success="True" time="0.0787" asserts="0" description="Top level script execution.When Var01 is an empty string and Help is not passed">
                <results>
                  <test-case description="Should call Show-Help function" name="Top level script execution.When Var01 is an empty string and Help is not passed.Should call Show-Help function" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Top level script execution.When no parameters are passed" executed="True" result="Success" success="True" time="0.1009" asserts="0" description="Top level script execution.When no parameters are passed">
                <results>
                  <test-case description="Should call Show-Help function" name="Top level script execution.When no parameters are passed.Should call Show-Help function" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Function testing" executed="True" result="Success" success="True" time="0.1915" asserts="0" description="Function testing">
            <results>
              <test-suite type="TestFixture" name="Function testing.Confirm-EnvironmentVariables" executed="True" result="Success" success="True" time="0.025" asserts="0" description="Function testing.Confirm-EnvironmentVariables">
                <results>
                  <test-case description="Should be true" name="Function testing.Confirm-EnvironmentVariables.Should be true" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should be false" name="Function testing.Confirm-EnvironmentVariables.Should be false" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function testing.Get-InstallationValues" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Function testing.Get-InstallationValues">
                <results>
                  <test-case description="All parameters set" name="Function testing.Get-InstallationValues.All parameters set" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function testing.Get-Value" executed="True" result="Success" success="True" time="0.0741" asserts="0" description="Function testing.Get-Value">
                <results>
                  <test-case description="With set values" name="Function testing.Get-Value.With set values" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Read from console" name="Function testing.Get-Value.Read from console" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Get default value" name="Function testing.Get-Value.Get default value" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>